name: ECS Release to preview
on:
  workflow_dispatch:
  push:
    branches:
      - 'develop'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  id-token: write
  contents: read
defaults:
  run:
    shell: bash

run-name: ${{ github.workflow }} by @${{ github.actor }} from ${{ github.ref_name }}

env:
  ENVIRONMENT: preview
  AWS_REGION: ${{ vars.AWS_REGION }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
  ECR_FULL_REPO: ${{ vars.AWS_ACCOUNT_ID }}.dkr.ecr.${{ vars.AWS_REGION }}.amazonaws.com/indexers-prev-ecr-reservoir

jobs:
  build-reservoir-image:
    name: "[preview] Build Reservoir Image"
    runs-on: ubuntu-latest
    environment: preview

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: AWS Login
        uses: ./.github/actions/aws-login
        with:
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Docker build and push action
        uses: ./.github/actions/docker-build
        with:
          ecr-full-repo: ${{ env.ECR_FULL_REPO }}
          docker-tag: latest
          docker-file: Dockerfile.reservoir

  prev-ecs-indexers-release:
    name: "Release"
    runs-on: ubuntu-latest
    needs: build-reservoir-image
    environment: preview
    strategy:
      fail-fast: false
      matrix:
        nodes:
          - { ecs_cluster_name: indexers-prev-cluster-sophon-testnet-reservoir, ecs_service_name: sophon-testnet-reservoir-primary, ecs_task_definition: preview-sophon-testnet-reservoir-primary  }
          - { ecs_cluster_name: indexers-prev-cluster-sophon-testnet-reservoir, ecs_service_name: sophon-testnet-reservoir-secondary, ecs_task_definition: preview-sophon-testnet-reservoir-secondary  }
          - { ecs_cluster_name: indexers-prev-cluster-zkevm-testnet-reservoir, ecs_service_name: zkevm-testnet-reservoir-primary, ecs_task_definition: preview-zkevm-testnet-reservoir-primary  }
          - { ecs_cluster_name: indexers-prev-cluster-zkevm-testnet-reservoir, ecs_service_name: zkevm-testnet-reservoir-secondary, ecs_task_definition: preview-zkevm-testnet-reservoir-secondary  }
          - { ecs_cluster_name: indexers-prev-cluster-beam-testnet-reservoir, ecs_service_name: beam-testnet-reservoir-primary, ecs_task_definition: preview-beam-testnet-reservoir-primary  }
          - { ecs_cluster_name: indexers-prev-cluster-beam-testnet-reservoir, ecs_service_name: beam-testnet-reservoir-secondary, ecs_task_definition: preview-beam-testnet-reservoir-secondary  }

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: AWS Login
        uses: ./.github/actions/aws-login
        with:
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Deploy to Amazon ECS
        run: |
          set -e
          echo "Deploying to cluster ${{ matrix.nodes.ecs_cluster_name }} : service ${{ matrix.nodes.ecs_service_name }}"
      
          # Update ECS service
          aws ecs update-service --region ${{ env.AWS_REGION }} --cluster ${{ matrix.nodes.ecs_cluster_name }} --service ${{ matrix.nodes.ecs_service_name }} --force-new-deployment --task-definition ${{ matrix.nodes.ecs_task_definition }}
      
          # Wait for deployment to complete
          echo "Waiting for the deployment to complete..."
          aws ecs wait services-stable --region ${{ env.AWS_REGION }} --cluster ${{ matrix.nodes.ecs_cluster_name }} --services ${{ matrix.nodes.ecs_service_name }}
      
          echo "Deployment to ECS succeeded."
        shell: bash
